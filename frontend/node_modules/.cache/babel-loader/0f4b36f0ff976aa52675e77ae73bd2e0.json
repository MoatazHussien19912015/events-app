{"ast":null,"code":"import { GET_EVENTS_REQUEST, GET_EVENTS_SUCCESS, GET_EVENTS_FAIL, ADD_EVENT_REQUEST, ADD_EVENT_SUCCESS, ADD_EVENT_FAIL } from '../types/eventActionTypes';\nimport axios from 'axios';\nexport const getEvents = x => (dispatch, getState) => {\n  dispatch({\n    type: GET_EVENTS_REQUEST\n  });\n  axios.get(`http://localhost:5000/events/get-events`).then(data => {\n    //console.log(data);\n    dispatch({\n      type: GET_EVENTS_SUCCESS,\n      payload: data\n    });\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: GET_EVENTS_FAIL,\n      payload: err.response.data\n    });\n  });\n};\nexport const addEvent = x => (dispatch, getState) => {\n  dispatch({\n    type: ADD_EVENT_REQUEST\n  });\n  axios.post(`http://localhost:5000/events/add-event`, x, {\n    headers: {\n      'x-auth': localStorage.getItem('token')\n    }\n  }).then(data => {\n    dispatch({\n      type: ADD_EVENT_SUCCESS\n    });\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: ADD_EVENT_FAIL,\n      payload: err.response.data\n    });\n  });\n};\n/* \n    export const login = (x) => (dispatch, getState) => {\n        dispatch({type: LOGIN_REQUEST});\n        axios.post(`/users/sign-in`,x).\n        then(data => { //console.log(data);\n            dispatch({type: LOGIN_SUCCESS, payload: data});\n        })\n        .catch(err=> { dispatch({type: LOGIN_FAIL, payload: err.response.data.message})});\n    }; */","map":{"version":3,"sources":["/media/moataz/data/my-projects/react projects/events-app/frontend/src/store/actions/eventActions.js"],"names":["GET_EVENTS_REQUEST","GET_EVENTS_SUCCESS","GET_EVENTS_FAIL","ADD_EVENT_REQUEST","ADD_EVENT_SUCCESS","ADD_EVENT_FAIL","axios","getEvents","x","dispatch","getState","type","get","then","data","payload","catch","err","console","log","response","addEvent","post","headers","localStorage","getItem"],"mappings":"AAAA,SAAQA,kBAAR,EAA4BC,kBAA5B,EAAgDC,eAAhD,EACIC,iBADJ,EACuBC,iBADvB,EAC0CC,cAD1C,QAC+D,2BAD/D;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEI,OAAO,MAAMC,SAAS,GAAIC,CAAD,IAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACpDD,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAEX;AAAP,GAAD,CAAR;AACAM,EAAAA,KAAK,CAACM,GAAN,CAAW,yCAAX,EACAC,IADA,CACKC,IAAI,IAAI;AAAE;AACXL,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEV,kBAAP;AAA2Bc,MAAAA,OAAO,EAAED;AAApC,KAAD,CAAR;AACH,GAHD,EAICE,KAJD,CAIOC,GAAG,IAAG;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAkBR,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAET,eAAP;AAAwBa,MAAAA,OAAO,EAAEE,GAAG,CAACG,QAAJ,CAAaN;AAA9C,KAAD,CAAR;AAA8D,GAJ/F;AAKH,CAPM;AAUP,OAAO,MAAMO,QAAQ,GAAIb,CAAD,IAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACnDD,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAER;AAAP,GAAD,CAAR;AACAG,EAAAA,KAAK,CAACgB,IAAN,CAAY,wCAAZ,EAAqDd,CAArD,EAAwD;AAACe,IAAAA,OAAO,EAAE;AAAC,gBAAUC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAX;AAAV,GAAxD,EACAZ,IADA,CACKC,IAAI,IAAI;AACTL,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEP;AAAP,KAAD,CAAR;AACH,GAHD,EAICY,KAJD,CAIOC,GAAG,IAAG;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAkBR,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEN,cAAP;AAAuBU,MAAAA,OAAO,EAAEE,GAAG,CAACG,QAAJ,CAAaN;AAA7C,KAAD,CAAR;AAA6D,GAJ9F;AAKH,CAPM;AAQX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {GET_EVENTS_REQUEST, GET_EVENTS_SUCCESS, GET_EVENTS_FAIL, \n    ADD_EVENT_REQUEST, ADD_EVENT_SUCCESS, ADD_EVENT_FAIL} from '../types/eventActionTypes';\nimport axios from 'axios';\n    \n    export const getEvents = (x) => (dispatch, getState) => {\n        dispatch({type: GET_EVENTS_REQUEST});\n        axios.get(`http://localhost:5000/events/get-events`).\n        then(data => { //console.log(data);\n            dispatch({type: GET_EVENTS_SUCCESS, payload: data});\n        })\n        .catch(err=> { console.log(err); dispatch({type: GET_EVENTS_FAIL, payload: err.response.data})});\n    };\n\n\n    export const addEvent = (x) => (dispatch, getState) => {\n        dispatch({type: ADD_EVENT_REQUEST});\n        axios.post(`http://localhost:5000/events/add-event`, x, {headers: {'x-auth': localStorage.getItem('token')}}).\n        then(data => {\n            dispatch({type: ADD_EVENT_SUCCESS});\n        })\n        .catch(err=> { console.log(err); dispatch({type: ADD_EVENT_FAIL, payload: err.response.data})});\n    };\n/* \n    export const login = (x) => (dispatch, getState) => {\n        dispatch({type: LOGIN_REQUEST});\n        axios.post(`/users/sign-in`,x).\n        then(data => { //console.log(data);\n            dispatch({type: LOGIN_SUCCESS, payload: data});\n        })\n        .catch(err=> { dispatch({type: LOGIN_FAIL, payload: err.response.data.message})});\n    }; */"]},"metadata":{},"sourceType":"module"}