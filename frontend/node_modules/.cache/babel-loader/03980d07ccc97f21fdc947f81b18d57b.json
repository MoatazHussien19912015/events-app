{"ast":null,"code":"import { REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAIL, ADD_IMAGE_REQUEST, ADD_IMAGE_SUCCESS, ADD_IMAGE_FAIL } from '../types/userActionsTypes';\nimport axios from 'axios';\nexport const register = x => (dispatch, getState) => {\n  dispatch({\n    type: REGISTER_REQUEST\n  });\n  axios.post(`http://localhost:5000/auth/register`, x).then(data => {\n    //console.log(data); \n    localStorage.setItem('token', JSON.stringify(data.data.user.token));\n    localStorage.setItem('user', JSON.stringify(data.data.user));\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: data\n    });\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: err.response.data\n    });\n  });\n};\nexport const login = x => (dispatch, getState) => {\n  dispatch({\n    type: LOGIN_REQUEST\n  });\n  axios.post(`http://localhost:5000/auth/login`, x).then(data => {\n    localStorage.setItem('token', JSON.stringify(data.data.user.token));\n    localStorage.setItem('user', JSON.stringify(data.data.user));\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data\n    });\n  }).catch(err => {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.response.data\n    });\n  });\n};\nexport const upload_image = x => (dispatch, getState) => {\n  dispatch({\n    type: ADD_IMAGE_REQUEST\n  });\n  axios.post(`http://localhost:5000/auth/add-image`, x, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }).then(data => {\n    //console.log(data);\n    dispatch({\n      type: ADD_IMAGE_SUCCESS,\n      payload: data\n    });\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: ADD_IMAGE_FAIL,\n      payload: err.response.data\n    });\n  });\n};\nexport const logout = () => (dispatch, getState) => {\n  dispatch({\n    type: LOGOUT_REQUEST\n  });\n  localStorage.removeItem('token');\n  dispatch({\n    type: LOGOUT_SUCCESS\n  });\n};","map":{"version":3,"sources":["/media/moataz/data/my-projects/react projects/events-app/frontend/src/store/actions/userActions.js"],"names":["REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAIL","ADD_IMAGE_REQUEST","ADD_IMAGE_SUCCESS","ADD_IMAGE_FAIL","axios","register","x","dispatch","getState","type","post","then","data","localStorage","setItem","JSON","stringify","user","token","payload","catch","err","console","log","response","login","upload_image","headers","logout","removeItem"],"mappings":"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","sourcesContent":["import {REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_REQUEST, \n    LOGOUT_SUCCESS, LOGOUT_FAIL, ADD_IMAGE_REQUEST, ADD_IMAGE_SUCCESS, ADD_IMAGE_FAIL} from '../types/userActionsTypes';\nimport axios from 'axios';\n    \n    export const register = (x) => (dispatch, getState) => {\n        dispatch({type: REGISTER_REQUEST});\n        axios.post(`http://localhost:5000/auth/register`,x).\n        then(data => { //console.log(data); \n            localStorage.setItem('token', JSON.stringify(data.data.user.token));\n            localStorage.setItem('user', JSON.stringify(data.data.user));\n            dispatch({type: REGISTER_SUCCESS, payload: data});\n        })\n        .catch(err=> { console.log(err); dispatch({type: REGISTER_FAIL, payload: err.response.data})});\n    };\n\n    export const login = (x) => (dispatch, getState) => {\n        dispatch({type: LOGIN_REQUEST});\n        axios.post(`http://localhost:5000/auth/login`,x).\n        then(data => {\n            localStorage.setItem('token', JSON.stringify(data.data.user.token));\n            localStorage.setItem('user', JSON.stringify(data.data.user));\n            dispatch({type: LOGIN_SUCCESS, payload: data});\n        })\n        .catch(err=> { dispatch({type: LOGIN_FAIL, payload: err.response.data})});\n    };\n\n\n    export const upload_image = (x) => (dispatch, getState) => {\n        dispatch({type: ADD_IMAGE_REQUEST});\n        axios.post(`http://localhost:5000/auth/add-image`,x , {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n        }).\n        then(data => { //console.log(data);\n            dispatch({type: ADD_IMAGE_SUCCESS, payload: data});\n        })\n        .catch(err=> { console.log(err); dispatch({type: ADD_IMAGE_FAIL, payload: err.response.data})});\n    };\n\n    export const logout = () => (dispatch, getState) => {\n        dispatch({type: LOGOUT_REQUEST});\n            localStorage.removeItem('token');\n            dispatch({type: LOGOUT_SUCCESS});\n       \n    };"]},"metadata":{},"sourceType":"module"}