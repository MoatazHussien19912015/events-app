{"ast":null,"code":"var _jsxFileName = \"/media/moataz/data/my-projects/react projects/events-app/frontend/src/components/pages/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../store/actions/userActions';\nimport Joi from 'joi-browser';\nimport { isEmpty } from '../../utils';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({});\n  const serverError = useSelector(state => state.authReducer.error);\n  const schema = {\n    email: Joi.string().email().required(),\n    password: Joi.string().required()\n  };\n\n  const validate = form => {\n    const result = Joi.validate(form, schema, {\n      abortEarly: false\n    });\n    return result;\n  };\n\n  const validateInput = (name, value) => {\n    const {\n      error\n    } = Joi.validate({\n      [name]: value\n    }, {\n      [name]: schema[name]\n    });\n    if (error) setErrors({ ...errors,\n      [name]: error.details[0].message\n    });else {\n      let newErrors = { ...errors\n      };\n      delete newErrors[name];\n      setErrors({ ...newErrors\n      });\n    }\n  };\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = useSelector(state => state.authReducer.user);\n\n  const handleChange = evt => {\n    if (evt.target.name == 'email') {\n      setEmail(evt.target.value);\n    } else if (evt.target.name == 'password') {\n      setPassword(evt.target.value);\n    }\n\n    validateInput(evt.target.name, evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = {\n      email,\n      password\n    };\n    const {\n      error,\n      value\n    } = validate(form);\n\n    if (error) {\n      let formErrors = {};\n\n      for (let i = 0; i < error.details.length; i++) {\n        formErrors[error.details[i].path[0]] = error.details[i].message;\n      }\n\n      setErrors(formErrors);\n    } else {\n      dispatch(login(form));\n    }\n  };\n\n  useEffect(() => {\n    if (!isEmpty(user)) {\n      history.push('/home');\n    }\n  }, [user]);\n\n  const isEmptyForm = () => {\n    return email + password == \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"email\",\n          children: \"email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"email\",\n          placeholder: \"Enter email\",\n          name: \"email\",\n          value: email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"alert alert-danger\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          placeholder: \"Enter password\",\n          name: \"password\",\n          value: password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), (errors === null || errors === void 0 ? void 0 : errors.password) && /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"alert alert-danger\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: !isEmpty(errors) || isEmptyForm(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), serverError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"alert alert-danger text-center\",\n      style: {\n        width: '100%',\n        top: '50%'\n      },\n      children: serverError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"jWynaiGXKE9fAC4w2GZY5n3FPT0=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useSelector];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/media/moataz/data/my-projects/react projects/events-app/frontend/src/components/pages/LoginPage.js"],"names":["React","useState","useEffect","useDispatch","useSelector","login","Joi","isEmpty","useHistory","LoginPage","email","setEmail","password","setPassword","errors","setErrors","serverError","state","authReducer","error","schema","string","required","validate","form","result","abortEarly","validateInput","name","value","details","message","newErrors","dispatch","history","user","handleChange","evt","target","handleSubmit","preventDefault","formErrors","i","length","path","push","isEmptyForm","width","top"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../store/actions/userActions';\nimport Joi from 'joi-browser';\nimport {isEmpty} from '../../utils';\nimport { useHistory } from 'react-router-dom';\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({});\n  const serverError = useSelector((state)=> state.authReducer.error);\n  const schema = {\n    email: Joi.string().email().required(),\n    password: Joi.string().required(),\n    \n  };\n  const validate = (form) => { const result = Joi.validate(form, schema, { abortEarly: false }); return result; };\n  const validateInput = (name, value) => {\n    const { error } = Joi.validate({ [name]: value }, { [name]: schema[name] });\n    if (error) setErrors({ ...errors, [name]: error.details[0].message });\n    else {\n      let newErrors = { ...errors };\n      delete newErrors[name];\n      setErrors({ ...newErrors });\n    }\n\n  };\n  const dispatch = useDispatch();\n   const history = useHistory();\n   const user = useSelector((state)=> state.authReducer.user);\n  const handleChange = (evt) => {\n    if (evt.target.name == 'email') { setEmail(evt.target.value); }\n    else if (evt.target.name == 'password') { setPassword(evt.target.value); }\n    validateInput(evt.target.name, evt.target.value);\n\n  };\n\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    const form = {email, password,};\n    const { error, value } = validate(form);\n    if(error){\n      let formErrors = {};\n    for (let i = 0; i < error.details.length; i++) {\n      formErrors[error.details[i].path[0]] = error.details[i].message;\n    }\n    setErrors(formErrors);\n    } else {\n      dispatch(login(form));\n    }\n    \n    \n      \n  };\n\n \n\n  useEffect(() => {\n   if(!isEmpty(user)) {\n    history.push('/home');}\n  \n  }, [user]);\n\n  const isEmptyForm = () => {\n    return (email + password == \"\");\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        \n        \n\n        <div className=\"form-group\">\n          <label for=\"email\">email:</label>\n          <input type=\"text\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" name=\"email\"\n            value={email} onChange={handleChange} />\n        </div>\n        {errors?.email && <div class=\"alert alert-danger\">\n          {errors.email} \n        </div>}\n\n        <div className=\"form-group\">\n          <label for=\"password\">Password:</label>\n          <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter password\" name=\"password\"\n            value={password} onChange={handleChange} />\n        </div>\n        {errors?.password && <div class=\"alert alert-danger\">\n          {errors.password} \n        </div>}\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={!isEmpty(errors) || isEmptyForm()}>Submit</button>\n      </form>\n      {serverError && <p className=\"alert alert-danger text-center\" style={{width: '100%',   top: '50%'}}>{serverError.message}</p>}\n    </div>\n  )\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}