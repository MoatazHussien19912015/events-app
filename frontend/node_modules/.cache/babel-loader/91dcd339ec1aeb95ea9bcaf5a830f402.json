{"ast":null,"code":"var _jsxFileName = \"/media/moataz/data/my-projects/react projects/events-app/frontend/src/components/pages/RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register, upload_image } from '../../store/actions/userActions';\nimport Joi from 'joi-browser';\nimport { isEmpty } from '../../utils';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterPage = () => {\n  _s();\n\n  const [username, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [image, setImage] = useState('');\n  const [errors, setErrors] = useState({});\n  const schema = {\n    username: Joi.string().required(),\n    email: Joi.string().email().required(),\n    password: Joi.string().required(),\n    confirmPassword: Joi.string().required()\n  };\n\n  const validate = form => {\n    const result = Joi.validate(form, schema, {\n      abortEarly: false\n    });\n    return result;\n  };\n\n  const validateInput = (name, value) => {\n    const {\n      error\n    } = Joi.validate({\n      [name]: value\n    }, {\n      [name]: schema[name]\n    });\n    if (error) setErrors({ ...errors,\n      [name]: error.details[0].message\n    });else {\n      let newErrors = { ...errors\n      };\n      delete newErrors[name];\n      setErrors({ ...newErrors\n      });\n    }\n  };\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const uploaded_image = useSelector(state => state.authReducer.uploaded_image);\n  const user = useSelector(state => state.authReducer.user);\n\n  const handleChange = evt => {\n    if (evt.target.name == 'username') {\n      setUserName(evt.target.value);\n    } else if (evt.target.name == 'email') {\n      setEmail(evt.target.value);\n    } else if (evt.target.name == 'password') {\n      setPassword(evt.target.value);\n    } else if (evt.target.name == 'confirmPassword') {\n      setConfirmPassword(evt.target.value);\n    }\n    /* else if (evt.target.name == 'image') { console.log(evt.target.files[0].name);  handleFileUpload(evt);} */\n\n\n    validateInput(evt.target.name, evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = {\n      username,\n      email,\n      password,\n      confirmPassword\n    };\n    const {\n      error,\n      value\n    } = validate(form);\n\n    if (!isEmpty(error)) {\n      let formErrors = {};\n\n      for (let i = 0; i < error.details.length; i++) {\n        formErrors[error.details[i].path[0]] = error.details[i].message;\n      }\n      /* if(form.password != form.confirmPassword) {\n        formErrors['password'] = formErrors['password']?formErrors['password'] + '  password and confirmed password are not match':formErrors['password'];\n        formErrors['confirmPassword'] = formErrors['confirmPassword']? formErrors['confirmPassword'] + '  password and confirmed password are not match':formErrors['confirmPassword'];\n      } */\n\n      /* if(form.password != form.confirmPassword) { console.log(form)\n        formErrors['password'] = '  password and confirmed password are not match';\n        formErrors['confirmPassword'] = '  password and confirmed password are not match';\n      } */\n\n\n      setErrors(formErrors);\n    } else {\n      if (image) {\n        form['image'] = image;\n      }\n\n      dispatch(register(form));\n    }\n  };\n\n  const handleFileUpload = evt => {\n    const x = new FormData();\n    x.append('avatar', evt.target.files[0]);\n    dispatch(upload_image(x));\n  };\n\n  useEffect(() => {\n    setImage(uploaded_image);\n\n    if (!isEmpty(user)) {\n      history.push('/');\n    }\n  }, [uploaded_image, user]);\n\n  const isEmptyForm = () => {\n    return username + email + password + confirmPassword + image == \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"username\",\n          placeholder: \"Enter name\",\n          name: \"username\",\n          value: username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), (errors === null || errors === void 0 ? void 0 : errors.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"alert alert-danger\",\n        children: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"email\",\n          placeholder: \"Enter email\",\n          name: \"email\",\n          value: email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"alert alert-danger\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password1\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password1\",\n          placeholder: \"Enter password\",\n          name: \"password\",\n          value: password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), (errors === null || errors === void 0 ? void 0 : errors.password) && /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"alert alert-danger\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password2\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password2\",\n          placeholder: \"Confirm password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), (errors === null || errors === void 0 ? void 0 : errors.confirmPassword) && /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"alert alert-danger\",\n        children: errors.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 37\n      }, this), password != confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"alert alert-danger\",\n        children: 'passwords are not match'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control\",\n          id: \"endDate\",\n          placeholder: \"Enter image\",\n          name: \"image\"\n          /* value={image} */\n          ,\n          onChange: handleFileUpload,\n          disabled: uploaded_image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: !isEmpty(errors) || isEmptyForm() || password != confirmPassword,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterPage, \"SR0XoATmZXEM9PSisK4qSWFK3ts=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/media/moataz/data/my-projects/react projects/events-app/frontend/src/components/pages/RegisterPage.js"],"names":["React","useState","useEffect","useDispatch","useSelector","register","upload_image","Joi","isEmpty","useHistory","RegisterPage","username","setUserName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","image","setImage","errors","setErrors","schema","string","required","validate","form","result","abortEarly","validateInput","name","value","error","details","message","newErrors","dispatch","history","uploaded_image","state","authReducer","user","handleChange","evt","target","handleSubmit","preventDefault","formErrors","i","length","path","handleFileUpload","x","FormData","append","files","push","isEmptyForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register, upload_image } from '../../store/actions/userActions';\nimport Joi from 'joi-browser';\nimport {isEmpty} from '../../utils';\nimport { useHistory } from 'react-router-dom';\n\nconst RegisterPage = () => {\n  const [username, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [image, setImage] = useState('');\n  const [errors, setErrors] = useState({});\n\n  const schema = {\n    username: Joi.string().required(),\n    email: Joi.string().email().required(),\n    password: Joi.string().required(),\n    confirmPassword: Joi.string().required()\n  };\n  const validate = (form) => { const result = Joi.validate(form, schema, { abortEarly: false }); return result; };\n  const validateInput = (name, value) => {\n    const { error } = Joi.validate({ [name]: value }, { [name]: schema[name] });\n    if (error) setErrors({ ...errors, [name]: error.details[0].message });\n    else {\n      let newErrors = { ...errors };\n      delete newErrors[name];\n      setErrors({ ...newErrors });\n    }\n\n  };\n  const dispatch = useDispatch();\n  const history = useHistory();\n   const uploaded_image = useSelector((state)=> state.authReducer.uploaded_image);\n   const user = useSelector((state)=> state.authReducer.user);\n  const handleChange = (evt) => {\n    if (evt.target.name == 'username') { setUserName(evt.target.value); }\n    else if (evt.target.name == 'email') { setEmail(evt.target.value); }\n    else if (evt.target.name == 'password') { setPassword(evt.target.value); }\n    else if (evt.target.name == 'confirmPassword') { setConfirmPassword(evt.target.value); }\n    /* else if (evt.target.name == 'image') { console.log(evt.target.files[0].name);  handleFileUpload(evt);} */\n    validateInput(evt.target.name, evt.target.value);\n\n  };\n\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    const form = { username, email, password, confirmPassword };\n    const { error, value } = validate(form);\n    if(!isEmpty(error)){\n    let formErrors = {};\n    \n    for (let i = 0; i < error.details.length; i++) {\n      formErrors[error.details[i].path[0]] = error.details[i].message;\n    }\n    /* if(form.password != form.confirmPassword) {\n      formErrors['password'] = formErrors['password']?formErrors['password'] + '  password and confirmed password are not match':formErrors['password'];\n      formErrors['confirmPassword'] = formErrors['confirmPassword']? formErrors['confirmPassword'] + '  password and confirmed password are not match':formErrors['confirmPassword'];\n    } */\n    /* if(form.password != form.confirmPassword) { console.log(form)\n      formErrors['password'] = '  password and confirmed password are not match';\n      formErrors['confirmPassword'] = '  password and confirmed password are not match';\n    } */\n    setErrors(formErrors);\n  }\n  else{\n  if(image){form['image'] = image;}\n      dispatch(register(form));\n  }\n    };\n\n  const handleFileUpload = (evt) => {\n    const x = new FormData();\n  x.append('avatar',evt.target.files[0]);\n  dispatch(upload_image(x));\n  \n  };\n\n  useEffect(() => {\n   setImage(uploaded_image);\n   if(!isEmpty(user)) {history.push('/');}\n  \n  }, [uploaded_image, user]);\n\n  const isEmptyForm = () => {\n    return (username + email + password + confirmPassword + image == \"\");\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username:</label>\n          <input type=\"text\" className=\"form-control\" id=\"username\" placeholder=\"Enter name\" name=\"username\" value={username} onChange={handleChange} />\n        </div>\n        {errors?.username && <div class=\"alert alert-danger\">\n          {errors.username} \n        </div>}\n        \n\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">email:</label>\n          <input type=\"text\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" name=\"email\"\n            value={email} onChange={handleChange} />\n        </div>\n        {errors?.email && <div class=\"alert alert-danger\">\n          {errors.email} \n        </div>}\n\n        <div className=\"form-group\">\n          <label htmlFor=\"password1\">Password:</label>\n          <input type=\"password\" className=\"form-control\" id=\"password1\" placeholder=\"Enter password\" name=\"password\"\n            value={password} onChange={handleChange} />\n        </div>\n        {errors?.password && <div class=\"alert alert-danger\">\n          {errors.password} \n        </div>}\n\n        <div className=\"form-group\">\n          <label htmlFor=\"password2\">Confirm Password:</label>\n          <input type=\"password\" className=\"form-control\" id=\"password2\" placeholder=\"Confirm password\" name=\"confirmPassword\"\n            value={confirmPassword} onChange={handleChange} />\n        </div>\n        {errors?.confirmPassword && <div class=\"alert alert-danger\">\n          {errors.confirmPassword} \n        </div>}\n\n        {password != confirmPassword && <div class=\"alert alert-danger\">\n          {'passwords are not match'} \n        </div>}\n        <div className=\"form-group\">\n          <label htmlFor=\"image\">Image:</label>\n          <input type=\"file\" className=\"form-control\" id=\"endDate\" placeholder=\"Enter image\" name=\"image\"\n            /* value={image} */ onChange={handleFileUpload} disabled={uploaded_image} />\n        </div>\n\n\n\n\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={!isEmpty(errors) || isEmptyForm() || password != confirmPassword}>Submit</button>\n      </form>\n\n    </div>\n  )\n}\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}