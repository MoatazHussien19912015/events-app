{"ast":null,"code":"import { GET_EVENTS_REQUEST, GET_EVENTS_SUCCESS, GET_EVENTS_FAIL, ADD_EVENT_REQUEST, ADD_EVENT_SUCCESS, ADD_EVENT_FAIL } from '../types/eventActionTypes';\n\nfunction authReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loading: false,\n    events: [],\n    error: null\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_EVENTS_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_EVENTS_SUCCESS:\n      return { ...state,\n        loading: false,\n        events: action.payload.data.events,\n        error: null\n      };\n\n    case GET_EVENTS_FAIL:\n      return { ...state,\n        loading: false,\n        events: [],\n        error: action.payload\n      };\n\n    case ADD_EVENT_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case ADD_EVENT_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: null\n      };\n\n    case ADD_EVENT_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;","map":{"version":3,"sources":["/media/moataz/data/my-projects/react projects/events-app/frontend/src/store/reducers/eventsReducer.js"],"names":["GET_EVENTS_REQUEST","GET_EVENTS_SUCCESS","GET_EVENTS_FAIL","ADD_EVENT_REQUEST","ADD_EVENT_SUCCESS","ADD_EVENT_FAIL","authReducer","state","loading","events","error","action","type","payload","data"],"mappings":"AAAA,SAAQA,kBAAR,EAA4BC,kBAA5B,EAAgDC,eAAhD,EACEC,iBADF,EACqBC,iBADrB,EACwCC,cADxC,QAC6D,2BAD7D;;AAGI,SAASC,WAAT,GAIa;AAAA,MAJUC,KAIV,uEAJkB;AAC3BC,IAAAA,OAAO,EAAE,KADkB;AAE3BC,IAAAA,MAAM,EAAE,EAFmB;AAG7BC,IAAAA,KAAK,EAAE;AAHsB,GAIlB;AAAA,MAARC,MAAQ;;AACT,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,kBAAL;AAAyB,aAAO,EAAE,GAAGO,KAAL;AAAYC,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACzB,SAAKP,kBAAL;AAAyB,aAAO,EAAE,GAAGM,KAAL;AAAYC,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,MAAM,EAAEE,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBL,MAAxD;AAAgEC,QAAAA,KAAK,EAAE;AAAvE,OAAP;;AACzB,SAAKR,eAAL;AAAsB,aAAO,EAAE,GAAGK,KAAL;AAAYC,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,MAAM,EAAE,EAApC;AAAwCC,QAAAA,KAAK,EAAEC,MAAM,CAACE;AAAtD,OAAP;;AAEtB,SAAKV,iBAAL;AAAwB,aAAO,EAAE,GAAGI,KAAL;AAAYC,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACxB,SAAKJ,iBAAL;AAAwB,aAAO,EAAE,GAAGG,KAAL;AAAYC,QAAAA,OAAO,EAAE,KAArB;AAA4BE,QAAAA,KAAK,EAAE;AAAnC,OAAP;;AACxB,SAAKL,cAAL;AAAqB,aAAO,EAAE,GAAGE,KAAL;AAAYC,QAAAA,OAAO,EAAE,KAArB;AAA4BE,QAAAA,KAAK,EAAEC,MAAM,CAACE;AAA1C,OAAP;;AAIrB;AAAS,aAAON,KAAP;AAXb;AAaD;;AAED,eAAeD,WAAf","sourcesContent":["import {GET_EVENTS_REQUEST, GET_EVENTS_SUCCESS, GET_EVENTS_FAIL, \n  ADD_EVENT_REQUEST, ADD_EVENT_SUCCESS, ADD_EVENT_FAIL} from '../types/eventActionTypes';\n    \n    function authReducer ( state = {\n        loading: false,\n        events: [],   \n      error: null\n      }, action) {\n        switch(action.type){\n            case GET_EVENTS_REQUEST: return { ...state, loading: true};\n            case GET_EVENTS_SUCCESS: return { ...state, loading: false, events: action.payload.data.events, error: null};\n            case GET_EVENTS_FAIL: return { ...state, loading: false, events: [], error: action.payload };\n\n            case ADD_EVENT_REQUEST: return { ...state, loading: true};\n            case ADD_EVENT_SUCCESS: return { ...state, loading: false, error: null};\n            case ADD_EVENT_FAIL: return { ...state, loading: false, error: action.payload };\n\n\n\n            default: return state;\n        }\n      }\n\n      export default authReducer;"]},"metadata":{},"sourceType":"module"}