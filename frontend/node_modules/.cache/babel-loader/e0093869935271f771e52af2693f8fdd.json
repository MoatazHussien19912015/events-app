{"ast":null,"code":"var _jsxFileName = \"/media/moataz/data/my-projects/react projects/events-app/frontend/src/components/pages/RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../../store/actions/userActions';\nimport Joi from 'joi-browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterPage = () => {\n  _s();\n\n  const [username, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [image, setImage] = useState('');\n  const [errors, setErrors] = useState(null);\n  const schema = {\n    username: Joi.string().required(),\n    email: Joi.string().email().required()\n  };\n\n  const validate = form => {\n    const result = Joi.validate(form, schema, {\n      abortEarly: false\n    });\n    return result;\n  };\n\n  const validateInput = (name, value) => {\n    const {\n      error\n    } = Joi.validate({\n      [name]: value\n    }, {\n      [name]: schema[name]\n    }, {\n      abortEarly: false\n    });\n    if (error) setErrors({ ...errors,\n      [name]: error.details[0].message\n    });\n    onsole.log(errors);\n  };\n\n  const dispatch = useDispatch(); // const events = useSelector((state)=> state.eventsReducer);\n\n  const handleChange = evt => {\n    if (evt.target.name == 'username') {\n      setUserName(evt.target.value);\n    } else if (evt.target.name == 'email') {\n      setEmail(evt.target.value);\n    } else if (evt.target.name == 'password') {\n      setPassword(evt.target.value);\n    } else if (evt.target.name == 'confirmPassword') {\n      setConfirmPassword(evt.target.value);\n    } else if (evt.target.name == 'image') {\n      setImage(evt.target.value);\n    }\n\n    validateInput(evt.target.name, evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = {\n      username,\n      email,\n      password,\n      image\n    };\n    const {\n      error,\n      value\n    } = validate(form);\n    let formErrors = {};\n\n    for (let i = 0; i < error.details.length; i++) {\n      formErrors[error.details[i].path[0]] = error.details[i].message;\n    }\n\n    setErrors(formErrors); //console.log(error.details, value);\n    //  dispatch(register(form));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"username\",\n          placeholder: \"Enter name\",\n          name: \"username\",\n          value: username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"email\",\n          children: \"email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"email\",\n          placeholder: \"Enter email\",\n          name: \"email\",\n          value: email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          placeholder: \"Enter password\",\n          name: \"password\",\n          value: password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"password\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          placeholder: \"Confirm password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"image\",\n          children: \"Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"endDate\",\n          placeholder: \"Enter image\",\n          name: \"image\",\n          value: image,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterPage, \"cICEn2342UzoXxJlWiBMB5M0tEk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/media/moataz/data/my-projects/react projects/events-app/frontend/src/components/pages/RegisterPage.js"],"names":["React","useState","useEffect","useDispatch","useSelector","register","Joi","RegisterPage","username","setUserName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","image","setImage","errors","setErrors","schema","string","required","validate","form","result","abortEarly","validateInput","name","value","error","details","message","onsole","log","dispatch","handleChange","evt","target","handleSubmit","preventDefault","formErrors","i","length","path"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport {register} from '../../store/actions/userActions';\nimport Joi from 'joi-browser';\n\nconst RegisterPage = () => {\nconst [username, setUserName] = useState('');\nconst [email, setEmail] = useState('');\nconst [password, setPassword] = useState('');\nconst [confirmPassword, setConfirmPassword] = useState('');\nconst [image, setImage] = useState('');\nconst [errors, setErrors] = useState(null);\n\nconst schema = { username: Joi.string().required(),\n  email: Joi.string().email().required(),\n };\nconst validate = (form) => { const result = Joi.validate(form, schema, {abortEarly: false}); return result; };\nconst validateInput = (name, value) => { \n  const {error} = Joi.validate({[name]:value}, {[name]:schema[name]}, {abortEarly: false});\n  if(error) setErrors({...errors, [name]: error.details[0].message});\n  onsole.log(errors);\n};\nconst dispatch = useDispatch();\n// const events = useSelector((state)=> state.eventsReducer);\n    const handleChange = (evt) => {\n        if(evt.target.name == 'username') {setUserName(evt.target.value);}\n        else if(evt.target.name == 'email') {setEmail(evt.target.value);}\n        else if(evt.target.name == 'password') {setPassword(evt.target.value);} \n        else if(evt.target.name == 'confirmPassword') {setConfirmPassword(evt.target.value);}\n        else if(evt.target.name == 'image') {setImage(evt.target.value);}\n\n        validateInput(evt.target.name, evt.target.value);\n\n    };\n\n\n    const handleSubmit = (evt) => {  \n        evt.preventDefault(); \n        const form = {username, email, password, image};\n        const {error, value} = validate(form);\n        let formErrors = {};\n        for(let i = 0; i < error.details.length; i++){\n          formErrors[error.details[i].path[0]] = error.details[i].message;\n        }\n       setErrors(formErrors);\n        //console.log(error.details, value);\n    //  dispatch(register(form));\n    };\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n    <div className=\"form-group\">\n      <label for=\"username\">Username:</label>\n      <input type=\"text\" className=\"form-control\" id=\"username\" placeholder=\"Enter name\" name=\"username\" value={username} onChange={handleChange} />\n    </div>\n\n    <div className=\"form-group\">\n      <label for=\"email\">email:</label>\n      <input type=\"text\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" name=\"email\" \n      value={email} onChange={handleChange} />\n    </div>\n\n    <div className=\"form-group\">\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter password\" name=\"password\" \n      value={password} onChange={handleChange} />\n    </div>\n\n    <div className=\"form-group\">\n      <label for=\"password\">Confirm Password:</label>\n      <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Confirm password\" name=\"confirmPassword\" \n      value={confirmPassword} onChange={handleChange} />\n    </div>\n\n    <div className=\"form-group\">\n      <label for=\"image\">Image:</label>\n      <input type=\"text\" className=\"form-control\" id=\"endDate\" placeholder=\"Enter image\" name=\"image\" \n      value={image} onChange={handleChange} />\n    </div>\n\n    \n    \n    \n    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n  </form>\n            \n        </div>\n    )\n}\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}